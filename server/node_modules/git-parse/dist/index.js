"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "checkoutCommit", {
  enumerable: true,
  get: function () {
    return _checkout_commit.default;
  }
});
Object.defineProperty(exports, "gitDiff", {
  enumerable: true,
  get: function () {
    return _git_diff.default;
  }
});
Object.defineProperty(exports, "gitPull", {
  enumerable: true,
  get: function () {
    return _git_pull.default;
  }
});
exports.gitToJs = void 0;

var _util = require("./util");

var _checkout_commit = _interopRequireDefault(require("./checkout_commit"));

var _git_pull = _interopRequireDefault(require("./git_pull"));

var _git_diff = _interopRequireDefault(require("./git_diff"));

var _parse_git_log = _interopRequireDefault(require("./parse_git_log"));

var _git_log_stream = _interopRequireDefault(require("./git_log_stream"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const gitToJs = (repoPath, options = {
  sinceCommit: undefined
}) => {
  const resolvedPath = (0, _util.resolveHome)(repoPath);

  try {
    (0, _util.validatePath)(resolvedPath);
  } catch (e) {
    return Promise.reject(e);
  }

  const {
    stream,
    addErrorHandler
  } = (0, _git_log_stream.default)(resolvedPath, options);
  return new Promise((resolve, reject) => {
    addErrorHandler(reject);
    (0, _parse_git_log.default)(stream).then(resolve);
  });
};

exports.gitToJs = gitToJs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJnaXRUb0pzIiwicmVwb1BhdGgiLCJvcHRpb25zIiwic2luY2VDb21taXQiLCJ1bmRlZmluZWQiLCJyZXNvbHZlZFBhdGgiLCJlIiwiUHJvbWlzZSIsInJlamVjdCIsInN0cmVhbSIsImFkZEVycm9ySGFuZGxlciIsInJlc29sdmUiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFNQSxNQUFNQSxPQUFPLEdBQUcsQ0FDZEMsUUFEYyxFQUVkQyxPQUF1QixHQUFHO0FBQ3hCQyxFQUFBQSxXQUFXLEVBQUVDO0FBRFcsQ0FGWixLQUtXO0FBQ3pCLFFBQU1DLFlBQVksR0FBRyx1QkFBWUosUUFBWixDQUFyQjs7QUFFQSxNQUFJO0FBQ0YsNEJBQWFJLFlBQWI7QUFDRCxHQUZELENBRUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1YsV0FBT0MsT0FBTyxDQUFDQyxNQUFSLENBQWVGLENBQWYsQ0FBUDtBQUNEOztBQUVELFFBQU07QUFBRUcsSUFBQUEsTUFBRjtBQUFVQyxJQUFBQTtBQUFWLE1BQThCLDZCQUFhTCxZQUFiLEVBQTJCSCxPQUEzQixDQUFwQztBQUVBLFNBQU8sSUFBSUssT0FBSixDQUFZLENBQUNJLE9BQUQsRUFBVUgsTUFBVixLQUFxQjtBQUN0Q0UsSUFBQUEsZUFBZSxDQUFDRixNQUFELENBQWY7QUFFQSxnQ0FBWUMsTUFBWixFQUFvQkcsSUFBcEIsQ0FBeUJELE9BQXpCO0FBQ0QsR0FKTSxDQUFQO0FBS0QsQ0FyQkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEdpdENvbW1pdCwgRmlsZU1vZGlmaWNhdGlvbiB9IGZyb20gXCIuL3R5cGVzL2dpdF9jb21taXRfdHlwZVwiO1xuaW1wb3J0IHsgdmFsaWRhdGVQYXRoLCByZXNvbHZlSG9tZSB9IGZyb20gXCIuL3V0aWxcIjtcbmltcG9ydCBjaGVja291dENvbW1pdCBmcm9tIFwiLi9jaGVja291dF9jb21taXRcIjtcbmltcG9ydCBnaXRQdWxsIGZyb20gXCIuL2dpdF9wdWxsXCI7XG5pbXBvcnQgZ2l0RGlmZiBmcm9tIFwiLi9naXRfZGlmZlwiO1xuaW1wb3J0IHBhcnNlR2l0TG9nIGZyb20gXCIuL3BhcnNlX2dpdF9sb2dcIjtcbmltcG9ydCBnaXRMb2dTdHJlYW0gZnJvbSBcIi4vZ2l0X2xvZ19zdHJlYW1cIjtcblxuZXhwb3J0IGludGVyZmFjZSBHaXRUb0pzT3B0aW9ucyB7XG4gIHNpbmNlQ29tbWl0OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59XG5cbmNvbnN0IGdpdFRvSnMgPSAoXG4gIHJlcG9QYXRoOiBzdHJpbmcsXG4gIG9wdGlvbnM6IEdpdFRvSnNPcHRpb25zID0ge1xuICAgIHNpbmNlQ29tbWl0OiB1bmRlZmluZWQsXG4gIH1cbik6IFByb21pc2U8R2l0Q29tbWl0W10+ID0+IHtcbiAgY29uc3QgcmVzb2x2ZWRQYXRoID0gcmVzb2x2ZUhvbWUocmVwb1BhdGgpO1xuXG4gIHRyeSB7XG4gICAgdmFsaWRhdGVQYXRoKHJlc29sdmVkUGF0aCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZSk7XG4gIH1cblxuICBjb25zdCB7IHN0cmVhbSwgYWRkRXJyb3JIYW5kbGVyIH0gPSBnaXRMb2dTdHJlYW0ocmVzb2x2ZWRQYXRoLCBvcHRpb25zKTtcblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGFkZEVycm9ySGFuZGxlcihyZWplY3QpO1xuXG4gICAgcGFyc2VHaXRMb2coc3RyZWFtKS50aGVuKHJlc29sdmUpO1xuICB9KTtcbn07XG5cbmV4cG9ydCB7IGdpdFRvSnMsIGNoZWNrb3V0Q29tbWl0LCBnaXRQdWxsLCBnaXREaWZmIH07XG5leHBvcnQgdHlwZSB7IEdpdENvbW1pdCwgRmlsZU1vZGlmaWNhdGlvbiB9O1xuIl19