"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _git_log_format_markers = require("./constants/git_log_format_markers");

var _parse_commit = _interopRequireDefault(require("./parse_commit"));

var _byline = _interopRequireDefault(require("byline"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const parseGitLog = stream => {
  return new Promise((resolve, reject) => {
    let buffer = [];
    const parsedCommits = [];
    const streamByLine = (0, _byline.default)(stream);
    const commitPattern = _git_log_format_markers.gitLogCommitMarker;
    streamByLine.on("data", line => {
      const lineString = line.toString();

      if (lineString.match(commitPattern)) {
        if (buffer.length) {
          parsedCommits.push((0, _parse_commit.default)(buffer));
          buffer = [];
        }
      } else {
        buffer.push(lineString);
      }
    });
    streamByLine.on("error", e => {
      reject(e);
    });
    streamByLine.on("end", () => {
      if (buffer.length) {
        parsedCommits.push((0, _parse_commit.default)(buffer));
      }

      resolve(parsedCommits);
    });
  });
};

var _default = parseGitLog;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXJzZV9naXRfbG9nLnRzIl0sIm5hbWVzIjpbInBhcnNlR2l0TG9nIiwic3RyZWFtIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJidWZmZXIiLCJwYXJzZWRDb21taXRzIiwic3RyZWFtQnlMaW5lIiwiY29tbWl0UGF0dGVybiIsImdpdExvZ0NvbW1pdE1hcmtlciIsIm9uIiwibGluZSIsImxpbmVTdHJpbmciLCJ0b1N0cmluZyIsIm1hdGNoIiwibGVuZ3RoIiwicHVzaCIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFdBQVcsR0FBSUMsTUFBRCxJQUF5RDtBQUMzRSxTQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdEMsUUFBSUMsTUFBZ0IsR0FBRyxFQUF2QjtBQUNBLFVBQU1DLGFBQTBCLEdBQUcsRUFBbkM7QUFDQSxVQUFNQyxZQUFZLEdBQUcscUJBQU9OLE1BQVAsQ0FBckI7QUFDQSxVQUFNTyxhQUFhLEdBQUdDLDBDQUF0QjtBQUVBRixJQUFBQSxZQUFZLENBQUNHLEVBQWIsQ0FBZ0IsTUFBaEIsRUFBeUJDLElBQUQsSUFBVTtBQUNoQyxZQUFNQyxVQUFVLEdBQUdELElBQUksQ0FBQ0UsUUFBTCxFQUFuQjs7QUFDQSxVQUFJRCxVQUFVLENBQUNFLEtBQVgsQ0FBaUJOLGFBQWpCLENBQUosRUFBcUM7QUFDbkMsWUFBSUgsTUFBTSxDQUFDVSxNQUFYLEVBQW1CO0FBQ2pCVCxVQUFBQSxhQUFhLENBQUNVLElBQWQsQ0FBbUIsMkJBQVlYLE1BQVosQ0FBbkI7QUFDQUEsVUFBQUEsTUFBTSxHQUFHLEVBQVQ7QUFDRDtBQUNGLE9BTEQsTUFLTztBQUNMQSxRQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWUosVUFBWjtBQUNEO0FBQ0YsS0FWRDtBQVlBTCxJQUFBQSxZQUFZLENBQUNHLEVBQWIsQ0FBZ0IsT0FBaEIsRUFBMEJPLENBQUQsSUFBTztBQUM5QmIsTUFBQUEsTUFBTSxDQUFDYSxDQUFELENBQU47QUFDRCxLQUZEO0FBSUFWLElBQUFBLFlBQVksQ0FBQ0csRUFBYixDQUFnQixLQUFoQixFQUF1QixNQUFNO0FBQzNCLFVBQUlMLE1BQU0sQ0FBQ1UsTUFBWCxFQUFtQjtBQUNqQlQsUUFBQUEsYUFBYSxDQUFDVSxJQUFkLENBQW1CLDJCQUFZWCxNQUFaLENBQW5CO0FBQ0Q7O0FBQ0RGLE1BQUFBLE9BQU8sQ0FBQ0csYUFBRCxDQUFQO0FBQ0QsS0FMRDtBQU1ELEdBNUJNLENBQVA7QUE2QkQsQ0E5QkQ7O2VBZ0NlTixXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBHaXRDb21taXQgfSBmcm9tIFwiLi90eXBlcy9naXRfY29tbWl0X3R5cGVcIjtcbmltcG9ydCB7IGdpdExvZ0NvbW1pdE1hcmtlciB9IGZyb20gXCIuL2NvbnN0YW50cy9naXRfbG9nX2Zvcm1hdF9tYXJrZXJzXCI7XG5pbXBvcnQgcGFyc2VDb21taXQgZnJvbSBcIi4vcGFyc2VfY29tbWl0XCI7XG5pbXBvcnQgYnlsaW5lIGZyb20gXCJieWxpbmVcIjtcblxuY29uc3QgcGFyc2VHaXRMb2cgPSAoc3RyZWFtOiBOb2RlSlMuUmVhZGFibGVTdHJlYW0pOiBQcm9taXNlPEdpdENvbW1pdFtdPiA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgbGV0IGJ1ZmZlcjogc3RyaW5nW10gPSBbXTtcbiAgICBjb25zdCBwYXJzZWRDb21taXRzOiBHaXRDb21taXRbXSA9IFtdO1xuICAgIGNvbnN0IHN0cmVhbUJ5TGluZSA9IGJ5bGluZShzdHJlYW0pO1xuICAgIGNvbnN0IGNvbW1pdFBhdHRlcm4gPSBnaXRMb2dDb21taXRNYXJrZXI7XG5cbiAgICBzdHJlYW1CeUxpbmUub24oXCJkYXRhXCIsIChsaW5lKSA9PiB7XG4gICAgICBjb25zdCBsaW5lU3RyaW5nID0gbGluZS50b1N0cmluZygpO1xuICAgICAgaWYgKGxpbmVTdHJpbmcubWF0Y2goY29tbWl0UGF0dGVybikpIHtcbiAgICAgICAgaWYgKGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgICBwYXJzZWRDb21taXRzLnB1c2gocGFyc2VDb21taXQoYnVmZmVyKSk7XG4gICAgICAgICAgYnVmZmVyID0gW107XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1ZmZlci5wdXNoKGxpbmVTdHJpbmcpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgc3RyZWFtQnlMaW5lLm9uKFwiZXJyb3JcIiwgKGUpID0+IHtcbiAgICAgIHJlamVjdChlKTtcbiAgICB9KTtcblxuICAgIHN0cmVhbUJ5TGluZS5vbihcImVuZFwiLCAoKSA9PiB7XG4gICAgICBpZiAoYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICBwYXJzZWRDb21taXRzLnB1c2gocGFyc2VDb21taXQoYnVmZmVyKSk7XG4gICAgICB9XG4gICAgICByZXNvbHZlKHBhcnNlZENvbW1pdHMpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlR2l0TG9nO1xuIl19